What happens when you initialize a repository? Why do you need to do it? Git does an initial commit. We need that because this becomes a reference for further commits.
How is the staging area different from the working directory and the repository? What value do you think it offers? The staging area is where I place files that I am working on between two commits, while the repository is all my files that are monitored by git, and the working directory is just a folder where I have the files. The advantage of the staging area if for gint to minimize the size of commits.
How can you use the staging area to make sure you have one commit per logical change? By using the command git diff --staged, I can make sure only the files and the changes pertaining to a single logical change will be saved in the next commit.
What are some situations when branches would be helpful in keeping your history organized? How would branches help? When you would to try new things, unofficial things, while keeping the official, stable version of the source.
How do the diagrams help you visualize the branch structure? I understand the logic better.
What is the result of merging two branches together? Why do we represent it in the diagram the way we do? Two merged branches give one branch without discarding the commits of any of the two first branches. That is why the diagram keeps both lines.
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually? Automatic cannot figure it all; you need to do some manual work, but it is faster. Manual work can be overwhelming, but you know what you are doing.